{"version":3,"sources":["components/AppHeader/AppHeader.jsx","components/SearchPanel/SearchPanel.jsx","components/TodoListItem/TodoListItem.jsx","components/TodoList/TodoList.jsx","components/ItemStatusFilter/ItemStatusFilter.jsx","components/ItemAddForm/ItemAddForm.jsx","components/App/App.jsx","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","searchText","handleChange","e","target","value","setState","props","onChange","type","placeholder","this","Component","TodoListItem","label","onDelete","onToggleImportant","onToggleDone","isImportant","isDone","classNames","cn","important","onClick","TodoList","todos","length","elements","map","item","id","itemProps","ItemStatusFilter","filter","buttons","name","defaultProps","ItemAddForm","handleLabelChange","handleSubmit","preventDefault","onAddItem","onSubmit","disabled","todoItems","Number","_","uniqueId","App","filterValue","deleteItem","el","addItem","text","newTodo","isImported","toggleProperty","propName","idx","findIndex","slice","toggleImportant","toggleDone","getDoneCount","search","items","toLowerCase","indexOf","getTodoCount","handleSearchChange","handleFilterChange","visibleItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19dba990.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './AppHeader.css';\n\nconst AppHeader = ({ toDo, done }) => (\n  <div className=\"app-header d-flex\">\n    <h1>Todo List</h1>\n    <h2>\n      {toDo} more to do, {done} done\n    </h2>\n  </div>\n);\n\nAppHeader.propTypes = {\n  toDo: PropTypes.number.isRequired,\n  done: PropTypes.number.isRequired,\n};\n\nexport default AppHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SearchPanel.css';\n\nexport default class SearchPanel extends Component {\n  state = {\n    searchText: '',\n  };\n\n  handleChange = (e) => {\n    const searchText = e.target.value;\n    this.setState({ searchText });\n    this.props.onChange(searchText);\n  };\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        className=\"form-control search-input\"\n        placeholder=\"type to search\"\n        value={this.state.searchText}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n\nSearchPanel.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './TodoListItem.css';\n\nexport default class TodoListItem extends Component {\n  render() {\n    const {\n      label,\n      onDelete,\n      onToggleImportant,\n      onToggleDone,\n      isImportant,\n      isDone,\n    } = this.props;\n\n    const classNames = cn('todo-list-item', {\n      done: isDone,\n      important: isImportant,\n    });\n\n    return (\n      <span className={classNames}>\n        <span className=\"todo-list-item-label\" onClick={onToggleDone}>\n          {label}\n        </span>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-success btn-sm float-right\"\n          onClick={onToggleImportant}\n        >\n          <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger btn-sm float-right\"\n          onClick={onDelete}\n        >\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  }\n}\n\nTodoListItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onToggleImportant: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n  isImportant: PropTypes.bool.isRequired,\n  isDone: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes, { bool } from 'prop-types';\n\nimport TodoListItem from '../TodoListItem';\nimport './TodoList.css';\n\nconst TodoList = (props) => {\n  // eslint-disable-next-line object-curly-newline\n  const { todos, onDelete, onToggleImportant, onToggleDone } = props;\n\n  if (todos.length === 0) {\n    return null;\n  }\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n          {...itemProps}\n          onDelete={() => onDelete(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)}\n        />\n      </li>\n    );\n  });\n\n  return <ul className=\"list-group todo-list\">{elements}</ul>;\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      label: PropTypes.string.isRequired,\n      isImportant: bool.isRequired,\n      isDone: bool.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onToggleImportant: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst ItemStatusFilter = (props) => {\n  const { filter, onChange } = props;\n\n  const buttonArray = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'done', label: 'Done' },\n  ];\n\n  const buttons = buttonArray.map(({ name, label }) => {\n    const classNames = cn('btn', {\n      'btn-info': filter === name,\n      'btn-outline-secondary': filter !== name,\n    });\n\n    return (\n      <button type=\"button\" className={classNames} key={name} onClick={() => onChange(name)}>\n        {label}\n      </button>\n    );\n  });\n\n  return <div className=\"btn-group\">{buttons}</div>;\n};\n\nItemStatusFilter.defaultProps = {\n  filter: null,\n};\n\nItemStatusFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ItemStatusFilter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ItemAddForm.css';\n\nexport default class ItemAddForm extends Component {\n  state = {\n    label: '',\n  };\n\n  handleLabelChange = (e) => {\n    this.setState({\n      label: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAddItem(this.state.label);\n    this.setState({\n      label: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"item-add-form d-flex\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"What needs to be done\"\n          onChange={this.handleLabelChange}\n          value={this.state.label}\n        />\n        <button className=\"btn btn-outline-secondary\" disabled={!this.state.label}>\n          Add Item\n        </button>\n      </form>\n    );\n  }\n}\n\nItemAddForm.propTypes = {\n  onAddItem: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nimport AppHeader from '../AppHeader';\nimport SearchPanel from '../SearchPanel';\nimport TodoList from '../TodoList';\nimport ItemStatusFilter from '../ItemStatusFilter';\nimport ItemAddForm from '../ItemAddForm';\nimport './App.css';\n\nconst todoItems = [\n  {\n    id: Number(_.uniqueId()),\n    label: 'Drink coffee',\n    isImportant: false,\n    isDone: false,\n  },\n  {\n    id: Number(_.uniqueId()),\n    label: 'Build awesome app',\n    isImportant: true,\n    isDone: false,\n  },\n  {\n    id: Number(_.uniqueId()),\n    label: 'Have lunch',\n    isImportant: false,\n    isDone: false,\n  },\n];\n\nexport default class App extends Component {\n  state = {\n    todos: todoItems,\n    searchText: '',\n    filterValue: 'all',\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ todos }) => {\n      const newArray = todos.filter((el) => el.id !== id);\n      return { todos: newArray };\n    });\n  };\n\n  addItem = (text) => {\n    const newTodo = {\n      id: _.uniqueId(),\n      label: text,\n      isImported: false,\n      isDone: false,\n    };\n\n    this.setState(({ todos }) => {\n      const newArray = [...todos, newTodo];\n      return { todos: newArray };\n    });\n  };\n\n  toggleProperty = (todos, id, propName) => {\n    const idx = todos.findIndex((el) => el.id === id);\n    const newTodo = { ...todos[idx], [propName]: !todos[idx][propName] };\n    const newArr = [...todos.slice(0, idx), newTodo, ...todos.slice(idx + 1)];\n    return newArr;\n  };\n\n  toggleImportant = (id) => {\n    this.setState(({ todos }) => ({\n      todos: this.toggleProperty(todos, id, 'isImportant'),\n    }));\n  };\n\n  toggleDone = (id) => {\n    this.setState(({ todos }) => ({\n      todos: this.toggleProperty(todos, id, 'isDone'),\n    }));\n  };\n\n  getDoneCount = () => {\n    const doneCount = this.state.todos.filter((el) => el.isDone).length;\n    return doneCount;\n  };\n\n  search = (items, searchText) => {\n    if (searchText.length === 0) {\n      return items;\n    }\n    return items.filter((item) => item.label.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n  };\n\n  filter = (items, filter) => {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter((item) => !item.isDone);\n      case 'done':\n        return items.filter((item) => item.isDone);\n      default:\n        return items;\n    }\n  };\n\n  getTodoCount = () => this.state.todos.length - this.getDoneCount();\n\n  handleSearchChange = (searchText) => {\n    this.setState({ searchText });\n  };\n\n  handleFilterChange = (filterValue) => {\n    this.setState({ filterValue });\n  };\n\n  render() {\n    const { todos, searchText, filterValue } = this.state;\n\n    const visibleItems = this.filter(this.search(todos, searchText), filterValue);\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={this.getTodoCount()} done={this.getDoneCount()} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel onChange={this.handleSearchChange} />\n          <ItemStatusFilter filter={filterValue} onChange={this.handleFilterChange} />\n        </div>\n\n        <TodoList\n          todos={visibleItems}\n          onDelete={this.deleteItem}\n          onToggleImportant={this.toggleImportant}\n          onToggleDone={this.toggleDone}\n        />\n\n        <ItemAddForm onAddItem={this.addItem} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}